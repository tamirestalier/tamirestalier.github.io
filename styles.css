body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f9;
    color: #333;
    margin: 0;
    padding: 0;
}

header {
    background-color: #3498db;
    color: white;
    padding: 20px;
    text-align: center;
}

section {
    margin: 20px;
}

footer {
    background-color: #2c3e50;
    color: white;
    text-align: center;
    padding: 10px;
    position: fixed;
    bottom: 0;
    width: 100%;
}

.content-coracao {
  position: relative;
  display: flex;
  justify-content: center;
  width: 100px;
  margin: 50px auto;
  -webkit-animation: pulsa 1s linear 0s infinite;
}
@keyframes pulsa {
  0% {
    transform: scale(0.9) rotate(0deg);
  }
  50% {
    transform: scale(1) rotate(0deg);
  }
  70% {
    transform: scale(1.1) rotate(0deg);
  }
  80% {
    transform: scale(1.2) rotate(0deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}
.square {
  transform: rotate(45deg);
  width: 50px;
  height: 50px;
  background: #e71940;
  position: absolute;
  top: 30px;
}
.circle:after,
.circle:before {
  content: "";
  position: absolute;
  width: 54px;
  height: 55px;
  border-radius: 50%;
  background: #e71940;
}
.circle:after {
  left: 5px;
  top: 6px;
}
.circle:before {
  right: 5px;
  top: 6px;
}
const canvas = document.getElementById('snakeGame');
const ctx = canvas.getContext('2d');

const box = 20;
let score = 0;
let snake = [];
snake[0] = { x: 9 * box, y: 10 * box };

let direction;
let food = {
    x: Math.floor(Math.random() * 19 + 1) * box,
    y: Math.floor(Math.random() * 19 + 1) * box
};

document.addEventListener('keydown', directionControl);

function directionControl(event) {
    if (event.keyCode == 37 && direction != "RIGHT") direction = "LEFT";
    if (event.keyCode == 38 && direction != "DOWN") direction = "UP";
    if (event.keyCode == 39 && direction != "LEFT") direction = "RIGHT";
    if (event.keyCode == 40 && direction != "UP") direction = "DOWN";
}

function drawGame() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Draw snake
    for (let i = 0; i < snake.length; i++) {
        ctx.fillStyle = (i === 0) ? "green" : "white";
        ctx.fillRect(snake[i].x, snake[i].y, box, box);
    }

    // Draw food
    ctx.fillStyle = "red";
    ctx.fillRect(food.x, food.y, box, box);

    // Move snake
    let snakeX = snake[0].x;
    let snakeY = snake[0].y;

    if (direction == "LEFT") snakeX -= box;
    if (direction == "UP") snakeY -= box;
    if (direction == "RIGHT") snakeX += box;
    if (direction == "DOWN") snakeY += box;

    if (snakeX == food.x && snakeY == food.y) {
        score++;
        food = {
            x: Math.floor(Math.random() * 19 + 1) * box,
            y: Math.floor(Math.random() * 19 + 1) * box
        };
    } else {
        snake.pop();
    }

    let newHead = {
        x: snakeX,
        y: snakeY
    };

    snake.unshift(newHead);

    // Game over condition
    if (snakeX < 0 || snakeX >= 20 * box || snakeY < 0 || snakeY >= 20 * box || collision(snake)) {
        clearInterval(game);
    }

    // Score and direction logic
    ctx.fillStyle = "white";
    ctx.font = "20px Arial";
    ctx.fillText("Score: " + score, 20, 30);
}

function collision(snake) {
    for (let i = 1; i < snake.length; i++) {
        if (snake[0].x == snake[i].x && snake[0].y == snake[i].y) return true;
    }
    return false;
}

let game = setInterval(drawGame, 100);


